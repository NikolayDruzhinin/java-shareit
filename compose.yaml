services:
  db:
    image: postgres:16.1
    container_name: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=shareit
      - POSTGRES_USER=dbuser
      - POSTGRES_PASSWORD=12345
      - PGOPTIONS=-c log_statement=all -c log_min_messages=debug1 -c log_connections=on -c log_disconnections=on
    healthcheck:
      test: pg_isready -q -d shareit -U dbuser
      timeout: 5s
      interval: 5s
      retries: 10
    networks:
      - db-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    depends_on:
      db:
        condition: service_healthy
    environment:
      PGADMIN_DEFAULT_EMAIL: northernnikolay@gmail.com
      PGADMIN_DEFAULT_PASSWORD: 12345
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "8081:80"
    networks:
      - db-network
    restart: unless-stopped

  db-init:
    image: postgres:16.1
    container_name: db-init
    depends_on:
      db:
        condition: service_healthy
    networks:
      - db-network
    entrypoint:
      - bash
      - -c
      - |
        set -e
        until pg_isready -h db -U dbuser -d shareit; do
          sleep 2
        done
        psql postgresql://dbuser:12345@db:5432/shareit -v ON_ERROR_STOP=1 <<-EOSQL
        CREATE TABLE IF NOT EXISTS users (
          id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
          email VARCHAR(320) UNIQUE,
          name VARCHAR(100)
        );
        
        CREATE TABLE IF NOT EXISTS requests (
          id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
          description VARCHAR(255),
          requestor_id BIGINT NOT NULL,
          CONSTRAINT fk_requests_to_users FOREIGN KEY(requestor_id) REFERENCES users(id) ON DELETE CASCADE
        );
        
        CREATE TABLE IF NOT EXISTS items (
          id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
          name VARCHAR(100),
          description VARCHAR(255), 
          is_available BOOLEAN, 
          owner_id BIGINT NOT NULL,
          request_id BIGINT, 
          CONSTRAINT fk_items_to_users FOREIGN KEY(owner_id) REFERENCES users(id) ON DELETE CASCADE,
          CONSTRAINT fk_items_to_requests FOREIGN KEY(request_id) REFERENCES requests(id)
        );
        
        CREATE TABLE IF NOT EXISTS bookings (
          id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
          start_date TIMESTAMP WITHOUT TIME ZONE NOT NULL, 
          end_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
          item_id BIGINT NOT NULL, 
          booker_id BIGINT NOT NULL, 
          status VARCHAR(100),
          CONSTRAINT fk_bookings_to_items FOREIGN KEY(item_id) REFERENCES items(id) ON DELETE CASCADE,
          CONSTRAINT fk_bookings_to_users FOREIGN KEY(booker_id) REFERENCES users(id) ON DELETE CASCADE,
          CONSTRAINT end_after_start CHECK (end_date > start_date)
        );
      
        CREATE TABLE IF NOT EXISTS comments (
          id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
          text VARCHAR(1000), 
          item_id BIGINT NOT NULL, 
          author_id BIGINT NOT NULL,
          CONSTRAINT fk_comments_to_items FOREIGN KEY(item_id) REFERENCES items(id) ON DELETE CASCADE,
          CONSTRAINT fk_comments_to_users FOREIGN KEY(author_id) REFERENCES users(id) ON DELETE CASCADE
        );
        EOSQL

volumes:
  postgres-data:
  pgadmin-data:
networks:
  db-network:
    driver: bridge